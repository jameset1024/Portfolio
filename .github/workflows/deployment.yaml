name: portfolio-prod

on:
    push:
        branches:
            - master


jobs:
    deploy:
        name: CD Pipeline
        runs-on: ubuntu-latest
        strategy:
            matrix: 
                node-version: ['12.x']
                appname: ['erik-portfolio']
                deploy-group: ['portfolio-production']
                s3-bucket: ['bt-codedeploy-deployments']
                s3-filename: ['production-portfolio-${{ github.sha }}']

        steps:
            - uses: actions/checkout@v2
            
            - name: Install Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            
            - name: Install dependencies
              run: npm ci
              
            - name: Run build
              run: npm run production
                  
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with: 
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.AWS_REGION }}
                  
            - name: AWS Deploy push
              run: | 
                  aws deploy push \
                  --application-name ${{ matrix.appname }} \
                  --description "This is a revision for the ${{ matrix.appname }}-${{ github.sha }}" \
                  --ignore-hidden-files \
                  --s3-location s3://${{ matrix.s3-bucket }}/${{ matrix.s3-filename }}.zip \
                  --source ./
                  
            - name: AWS Create Deployment
              run: |
                  aws deploy create-deployment \
                  --application-name ${{ matrix.appname }} \
                  --deployment-config-name CodeDeployDefault.OneAtATime \
                  --deployment-group-name ${{ matrix.deploy-group }} \
                  --file-exists-behavior OVERWRITE \
                  --s3-location bucket=${{ matrix.s3-bucket }},key=${{ matrix.s3-filename }}.zip,bundleType=zip \

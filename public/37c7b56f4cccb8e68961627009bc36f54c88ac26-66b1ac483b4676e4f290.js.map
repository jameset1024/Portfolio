{"version":3,"file":"37c7b56f4cccb8e68961627009bc36f54c88ac26-66b1ac483b4676e4f290.js","mappings":"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","sources":["webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/use-force-update.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/frameloop/data.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/frameloop/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                allChildren.delete(key);\n                exitingChildren.delete(key);\n                // Remove this child from the present children\n                const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n                presentChildren.current.splice(removeIndex, 1);\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    presentChildren.current = filteredChildren;\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { frame } from '../frameloop/index.mjs';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.12\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.12\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.12 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["useIsMounted","isMounted","useRef","current","PopChildMeasure","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","delete","undefined","forEach","_","key","PresenceContext","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","forceRender","useContext","LayoutGroupContext","forcedRenderCount","setForcedRenderCount","useState","useCallback","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","callback","updateChildLookup","clear","useEffect","map","presentKeys","targetKeys","numPresent","length","i","indexOf","has","component","get","insertionIndex","exitingComponent","onExit","removeIndex","findIndex","presentChild","splice","cloneElement","createContext","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","keepAlive","immediate","addToCurrentFrame","buffer","add","cancel","index","process","createRenderStep","processStep","stepId","processFrame","Math","max","min","requestAnimationFrame","cancelFrame","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","update","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","camelToDash","str","replace","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","prevIsPresent","prevPresenceContext","exitAnimation","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","data","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","DOMVisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","warning","invariant","isBrowser","any","useConstant","useIsomorphicLayoutEffect","useLayoutEffect"],"sourceRoot":""}
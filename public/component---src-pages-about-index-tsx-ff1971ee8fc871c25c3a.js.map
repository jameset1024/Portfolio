{"version":3,"file":"component---src-pages-about-index-tsx-ff1971ee8fc871c25c3a.js","mappings":"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","sources":["webpack://personal-portfolio/./src/data/experience.ts","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/frameloop/data.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/frameloop/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/use-force-update.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://personal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://personal-portfolio/./src/components/interactives/experience_drawer/index.tsx","webpack://personal-portfolio/./src/pages/about/index.tsx"],"sourcesContent":["export type ExperienceInterface = {\n  title: string;\n  description: string;\n  date: string;\n  link?: string;\n  logo: string;\n  position: string;\n  location: string;\n  skills: string[];\n}\n\nexport const Experience: ExperienceInterface[] = [\n  {\n    title: 'Nearby Creative',\n    date: 'March 2019 - Present',\n    link: 'https://nearbycreative.com',\n    position: 'VP of Engineering',\n    logo: 'https://erik-portfolio.s3.amazonaws.com/experience/Nearby.png',\n    location: 'Pittsburgh, PA',\n    description: 'Manage engineering client relationships, applications, infrastructure, and deployments. Ensure that all enngineering best practices are being implemented on both internal and external projects.',\n    skills: ['PHP', 'Javascript', 'Node', 'React', 'React Native', 'Iac', 'AWS', 'Python', 'Nest', 'SASS']\n  },\n  {\n    title: 'Bright Thought, LLC',\n    date: 'June 2014 - Present',\n    link: 'https://brightthought.co',\n    location: 'Pittsburgh, PA',\n    position: 'Owner',\n    logo: 'https://erik-portfolio.s3.amazonaws.com/bt-logo.svg',\n    description: 'Manage client projects from ideation to production deployment. Provide on-going support for client websites/applications on an on-going basis.',\n    skills: ['PHP', 'Javascript', 'Node', 'React', 'Iac', 'AWS', 'WordPress', 'Gatsby']\n  },\n  {\n    title: 'Ascender',\n    date: 'February 2020 - Present',\n    link: 'https://ascenderpgh.com',\n    location: 'Pittsburgh, PA',\n    position: 'Contractor',\n    logo: 'https://erik-portfolio.s3.amazonaws.com/experience/ascender.svg',\n    description: 'Manage Ascenders online presense which includes WordPress and Plugin updates managing hosting and making necessary code changes.',\n    skills: ['PHP', 'Javascript', 'Wordpress', 'SASS']\n  },\n  {\n    title: 'Cognistx',\n    date: 'May 2018 - October 2022',\n    link: 'https://www.cognistx.com',\n    location: 'Remote',\n    position: 'Contractor',\n    logo: 'https://erik-portfolio.s3.amazonaws.com/experience/cognistx.png',\n    description: 'Develop custom and dynamic WordPress themes as well as Plugins. Establish code standards and methodologies to integrate third party tools into custom themes.',\n    skills: ['WordPress', 'PHP', 'Javascript', 'React', 'AWS', 'Jenkins']\n  },\n  {\n    title: 'Duquesne Light Company',\n    link: 'https://www.duquesnelight.com',\n    date: 'January 2018 - August 2018',\n    location: 'Pittsburgh, PA',\n    position: 'Contractor',\n    logo: 'https://erik-portfolio.s3.amazonaws.com/experience/dlc-logo.png',\n    description: 'Developed styled intranet pages using CSS and JS in a .NET environment. During this time I worked on a team of 6 in a scrum style environment.',\n    skills: ['CSS', 'JS']\n  },\n  {\n    title: 'Shift Collaborative',\n    date: 'December 2016 - October 2019',\n    link: 'https://shiftcollaborative.com/',\n    location: 'Pittsburgh, PA',\n    position: 'Contractor',\n    logo: 'https://erik-portfolio.s3.amazonaws.com/experience/shift.png',\n    description: 'As a contractor for Shift, I created custom WordPress themes and Plugins as well as custom backend processing applications. Within my responsibilities I also handled all client support issues pertaining to WordPress installations.',\n    skills: ['WorPress', 'JQuery', 'CSS', 'PHP']\n  }\n];\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                allChildren.delete(key);\n                exitingChildren.delete(key);\n                // Remove this child from the present children\n                const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n                presentChildren.current.splice(removeIndex, 1);\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    presentChildren.current = filteredChildren;\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { frame } from '../frameloop/index.mjs';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.12\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.12\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.12 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import React, {BaseSyntheticEvent, useEffect, useState} from 'react';\nimport {ExperienceInterface} from \"@app/data/experience\";\nimport {AnimatePresence, motion} from \"framer-motion\";\nimport \"./styles.scss\";\nimport {faLocationDot, faUserTie} from \"@fortawesome/free-solid-svg-icons\";\nimport {faLink} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\ntype ExperienceData = {\n  data: ExperienceInterface[]\n}\nconst ExperienceDrawer = ({data}: ExperienceData) => {\n  const [open, setOpen] = useState<Array<boolean>>(data.map( _ => false));\n\n  /**\n   * Handles adjusting the image sizes if they are over\n   * a certain height.\n   *\n   * @param e\n   */\n  const imageMeasure = ( e: BaseSyntheticEvent<HTMLImageElement> ) => {\n    if ( e.target.clientHeight > 100 ) {\n      e.target.style.height = '100px';\n    }\n  }\n\n  const toggleClick = ( i: number ) => {\n    const copy = [...open];\n    copy[i] = !copy[i];\n\n    setOpen(copy);\n  }\n\n  return (\n    <div className={'experience-drawer'}>\n      {data.map((e, i) => {\n        return (\n          <div className={'drawer-item'} key={`${i}-drawer-item`}>\n            <div className={'drawer-control'} onClick={() => toggleClick(i)}>\n              <div className={'title'}><strong>{e.title}</strong> - {e.position}</div>\n              <div className={'date'}>{e.date}</div>\n            </div>\n            <AnimatePresence initial={false}>\n              {open[i] && (\n                <motion.div\n                  style={{overflow: 'hidden'}}\n                  initial=\"collapsed\"\n                  animate=\"open\"\n                  exit=\"collapsed\"\n                  variants={{\n                    open: { opacity: 1, height: 'auto' },\n                    collapsed: { opacity: 0, height: 0 },\n                  }}\n                  transition={{ duration: 0.3, ease: 'linear' }}\n                >\n                  <motion.div\n                    variants={{\n                      collapsed: {scale: 0.8},\n                      open: { scale: 1}\n                    }}\n                    transition={{duration: 0.8}}\n                    className={'drawer-content'}\n                  >\n                    <div className={'drawer-content-inner'}>\n                      <div>\n                        <div className={'content-meta'}>\n                          <div className={'position'}>\n                            <FontAwesomeIcon icon={faUserTie} color={'#ffffff'} size={'sm'} />\n                            {e.position}\n                          </div>\n                          <div className={'location'}>\n                            <FontAwesomeIcon icon={faLocationDot} color={'#ffffff'} size={'sm'} />\n                            {e.location}\n                          </div>\n                          <div className={'link'}>\n                            <FontAwesomeIcon icon={faLink} color={'#ffffff'} size={'sm'} />\n                            {e.link && <a href={e.link} target={'_blank'}>{e.link.replace(/(https|http):\\/\\//g, '')}</a> }\n                          </div>\n                        </div>\n                        <div className={'description'}>\n                          {e.description}\n                        </div>\n                      </div>\n                      <div>\n                        <img src={e.logo} alt={e.title} onLoad={ (e) => imageMeasure(e)}/>\n                      </div>\n                      <div className={'languages'}>\n                        {e.skills &&\n                            <>\n                              {e.skills.map(i => {\n                                return <div>{i}</div>\n                              })}\n                            </>\n                        }\n                      </div>\n                    </div>\n                  </motion.div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n        )\n      })}\n    </div>\n);\n}\n\nexport default ExperienceDrawer;\n","import * as React from \"react\";\nimport type { HeadFC, PageProps } from \"gatsby\";\nimport \"./styles.scss\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport { faGithub, faLinkedinIn, faTwitter, faPinterest, faInstagram } from \"@fortawesome/free-brands-svg-icons\";\nimport { Experience } from \"@app/data/experience\";\nimport ExperienceDrawer from \"@app/components/interactives/experience_drawer\";\n\nconst AboutPage: React.FC<PageProps> = () => {\n  return (\n    <div className={'about-page'}>\n      <div className={'banner-wrap'} role={'banner'}>\n        <div className={'banner-text'}>\n          About\n        </div>\n      </div>\n      <section className={'about-info'}>\n        <div className={'about-inner'}>\n          <div>\n            <h2>Charlotte Resident, Pittsburgh Made</h2>\n            <p>Hello and thank you for visiting my website. My name is Erik and I'm a full-stack software engineer currently residing in Charlotte, NC. I've worked as an engineer since 2013, starting off as a freelancer until I made it to may current position with Nearby Creative.</p>\n            <p>When I'm not working on a project, you'll find me cooking from recipes from Pinterest, working out at the YMCA, or playing video games.</p>\n          </div>\n          <div>\n            <div className={'headshot-wrapper'}>\n              <img src={'https://erik-portfolio.s3.amazonaws.com/B11A9094.jpeg'} alt={'Erik Thomas Headshot'} />\n            </div>\n          </div>\n        </div>\n\n        <div className={'about-contact'}>\n          <div className={'text'}>\n            <strong>Follow Me:</strong>\n          </div>\n          <div className={'socials'}>\n            <a href={'https://github.com/jameset1024'} target={'_blank'}>\n              <FontAwesomeIcon icon={faGithub} color={'#ffffff'} size={'lg'} />\n            </a>\n            <a href={'https://www.linkedin.com/in/erikjamesthomas/'} target={'_blank'}>\n              <FontAwesomeIcon icon={faLinkedinIn} color={'#ffffff'} size={'lg'} />\n            </a>\n            <a href={'https://twitter.com/jameset1024/'} target={'_blank'}>\n              <FontAwesomeIcon icon={faTwitter} color={'#ffffff'} size={'lg'} />\n            </a>\n            <a href={'https://www.pinterest.com/jameset1024/recipes/'} target={'_blank'}>\n              <FontAwesomeIcon icon={faPinterest} color={'#ffffff'} size={'lg'} />\n            </a>\n            <a href={'https://www.instagram.com/jameset1024'} target={'_blank'}>\n              <FontAwesomeIcon icon={faInstagram} color={'#ffffff'} size={'lg'} />\n            </a>\n          </div>\n        </div>\n      </section>\n\n      <section className={'about-experience'}>\n        <h2>Work Experience</h2>\n\n        <div className={'experience-wrap'}>\n          <ExperienceDrawer data={Experience} />\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default AboutPage\n\nexport const Head: HeadFC = () => <title>About | Erik James Thomas - Senior Software Engineer</title>\n"],"names":["Experience","title","date","link","position","logo","location","description","skills","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","reduce","acc","key","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","keepAlive","immediate","addToCurrentFrame","buffer","add","indexOf","push","length","cancel","index","splice","delete","process","i","has","createRenderStep","processStep","stepId","processFrame","Math","max","min","forEach","requestAnimationFrame","cancelFrame","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","useIsMounted","isMounted","useRef","current","createContext","useConstant","init","ref","PopChildMeasure","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","id","useId","useInsertionEffect","dataset","motionPopId","style","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","undefined","_","value","Map","LayoutGroupContext","noop","any","warning","invariant","getChildKey","child","AnimatePresence","exitBeforeEnter","forceRender","useContext","forcedRenderCount","setForcedRenderCount","useState","useCallback","useForceUpdate","filteredChildren","filtered","Children","isValidElement","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","updateChildLookup","clear","map","presentKeys","targetKeys","numPresent","component","get","insertionIndex","exitingComponent","onExit","removeIndex","findIndex","presentChild","cloneElement","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","update","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","camelToDash","str","replace","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","prevIsPresent","prevPresenceContext","exitAnimation","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","DOMVisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","_ref","open","setOpen","React","className","onClick","copy","_toConsumableArray","toggleClick","div","overflow","collapsed","FontAwesomeIcon","icon","faUserTie","faLocationDot","faLink","href","src","alt","onLoad","clientHeight","imageMeasure","AboutPage","role","faGithub","faLinkedinIn","faTwitter","faPinterest","faInstagram","ExperienceDrawer","Head"],"sourceRoot":""}